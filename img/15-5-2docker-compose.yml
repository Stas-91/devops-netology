services:

  reverse-proxy:
    image: haproxy:2.4
    networks:
      - backend
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
    volumes:
      - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw 

  ingress-proxy:
    image: nginx:1.21.1
    networks:
      - frontend
      - backend
    ports:
      - "8090:8090"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    volumes:
      - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
  web:
    image: stas91/webapp3.9:1.0  # Замени build на image
    environment:
      - DB_HOST=db
      - DB_USER=app
      - DB_PASSWORD=QwErTy1234
      - DB_NAME=virtd
    depends_on:
      - db
    networks:
      - backend
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 1
      restart_policy:
        condition: any
  
  db:
    image: mysql:8.0
    # command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=virtd
      - MYSQL_USER=app
      - MYSQL_PASSWORD=QwErTy1234
      - MYSQL_ROOT_PASSWORD=YtReWq4321
      - MYSQL_ROOT_HOST=%
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    volumes:
      - db-data:/var/lib/mysql

  diagnostics:
    image: ubuntu:latest
    command: ["sleep", "infinity"]  # Держим контейнер живым
    networks:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]  # Запускаем на worker-ноде, где проблема

networks:
  frontend:
  backend:

volumes:
  db-data: